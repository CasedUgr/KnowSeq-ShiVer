coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
library(ggpubr)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 3))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_classic() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_classic() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
library(ggpubr)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 3))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_vw() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_bw() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
library(ggpubr)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 3))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
library(ggpubr)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 3))
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 4))
dev.off()
dev.off()
dev.off()
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
library(ggpubr)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 4))
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 3))
ggsave(filename = "new_heatmap.png", width = 7, height = 7)
ggsave(filename = "new_heatmap.png", width = 9, height = 7)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 2))
g1 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = labels)) +
#geom_tile(aes(fill = value, col = labels)) +
#scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("") +
xlab("") +
ylab("") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = "white"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5),
legend.position="left",
legend.margin=margin(t = 0, unit='cm'))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
library(ggpubr)
g1
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 2))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
library(ggpubr)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1.2, 2))
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(.8, 2))
ggsave(filename = "new_heatmap.png", width = 7, height = 7)
grid.arrange(g1, g2)
library(gridExtra)
grid.arrange(g1, g2)
grid.arrange(g1, g2, ncol = 2, nrow = )
grid.arrange(g1, g2, ncol = 2, nrow = 1)
grid.arrange(g1, g2, ncol = 2, nrow = 1, widths = c(.8, 2))
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 2))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5),
plot.margin = unit(c(0,0,0,0), "cm"))
g1 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = labels)) +
#geom_tile(aes(fill = value, col = labels)) +
#scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("") +
xlab("") +
ylab("") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = "white"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5),
legend.position="left",
legend.margin=margin(t = 0, unit='cm'),
plot.margin = unit(c(0,0,0,0), "cm"))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5),
plot.margin = unit(c(0,0,0,0), "cm"))
library(ggpubr)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 2))
grid.arrange(g1, g2, ncol = 2, nrow = 1, widths = c(.8, 2))
library(gridExtra)
grid.arrange(g1, g2, ncol = 2, nrow = 1, widths = c(.8, 2))
grid.arrange(g1, g2, ncol = 2, nrow = 1, widths = c(1, 2))
g1 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = labels)) +
#geom_tile(aes(fill = value, col = labels)) +
#scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("") +
xlab("") +
ylab("") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = "white"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5),
legend.position="left",
legend.margin=margin(t = 0, unit='cm'),
plot.margin = unit(c(0,0,1,0), "cm"))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5),
plot.margin = unit(c(0,0,0,0), "cm"))
library(ggpubr)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 2))
g1 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = labels)) +
#geom_tile(aes(fill = value, col = labels)) +
#scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("") +
xlab("") +
ylab("") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = "white"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5),
legend.position="left",
legend.margin=margin(t = 0, unit='cm'),
plot.margin = unit(c(0,0,0,1), "cm"))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5),
plot.margin = unit(c(0,0,0,0), "cm"))
library(ggpubr)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 2))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
g1 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = labels)) +
#geom_tile(aes(fill = value, col = labels)) +
#scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("") +
xlab("") +
ylab("") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = "white"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5),
legend.position="left",
legend.margin=margin(t = 0, unit='cm'))
grid.arrange(g1, g2, ncol = 2, nrow = 1, widths = c(1, 1))
grid.arrange(g1, g2, ncol = 2, nrow = 1, widths = c(1, 1.5))
grid.arrange(g1, g2, ncol = 2, nrow = 1, widths = c(1, 1.75))
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 1.75))
labels
labels <- paste0(labels, labels)
labels
g1 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = labels)) +
#geom_tile(aes(fill = value, col = labels)) +
#scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("") +
xlab("") +
ylab("") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = "white"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5),
legend.position="left",
legend.margin=margin(t = 0, unit='cm'))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
library(ggpubr)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 1.75))
library(gridExtra)
grid.arrange(g1, g2, ncol = 2, nrow = 1, widths = c(1, 1.75))
levels(labels)
labels
DEGsMatrix <- DEGsMatrix[1:12,]
# Original
dataPlot(DEGsMatrix, labels, mode = "heatmap", toPNG = F, toPDF = T)
# Reorder DEGsMatrix and labels
labels_levels <- levels(as.factor(labels))
for(i in 1:length(labels_levels)){
if(i == 1) {
DEGsMatrix_heatmap <- DEGsMatrix[, which(labels == labels_levels[1])]
labels_heatmap <- labels[which(labels == labels_levels[1])]
}
else {
DEGsMatrix_heatmap <- cbind(DEGsMatrix_heatmap, DEGsMatrix[, which(labels == labels_levels[i])])
labels_heatmap <- c(labels_heatmap, labels[which(labels == labels_levels[i])])
}
}
DEGsMatrix_heatmap <- melt(DEGsMatrix_heatmap)
head(DEGsMatrix_heatmap)
# Aproximación 1
DEGsMatrix_heatmap$labels <- NA
j <- 1
for(i in 1:nrow(DEGsMatrix_heatmap)){
if(i == 1) DEGsMatrix_heatmap$labels[i] <- labels_heatmap[1]
else {
if(DEGsMatrix_heatmap$Var2[i] == DEGsMatrix_heatmap$Var2[i-1]) DEGsMatrix_heatmap$labels[i] <- DEGsMatrix_heatmap$labels[i-1]
else{
j <- j + 1
DEGsMatrix_heatmap$labels[i] <- labels_heatmap[j]
}
}
}
g1 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = labels)) +
#geom_tile(aes(fill = value, col = labels)) +
#scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("") +
xlab("") +
ylab("") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = "white"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5),
legend.position="left",
legend.margin=margin(t = 0, unit='cm'))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
library(ggpubr)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 1.75))
g1 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = labels)) +
#geom_tile(aes(fill = value, col = labels)) +
#scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("") +
xlab("") +
ylab("") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = "white"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5),
legend.position="top",
legend.margin=margin(t = 0, unit='cm'))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
library(ggpubr)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 1.75))
g1 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
geom_tile(aes(fill = labels)) +
#geom_tile(aes(fill = value, col = labels)) +
#scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("") +
xlab("") +
ylab("") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10, color = "white"),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5),
legend.position="left",
legend.margin=margin(t = 0, unit='cm'))
g2 <- ggplot(data = DEGsMatrix_heatmap, aes(x = Var2, y = Var1)) +
#geom_tile(aes(fill = labels)) +
geom_tile(aes(fill = value)) +
scale_fill_gradientn(colors = c("red", "black", "green")) +
ggtitle("Title") +
xlab("xlab") +
ylab("ylab") +
coord_flip() +
theme_minimal() +
theme(axis.text = element_text(color = "black"),
axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5, size = 10),
axis.text.y = element_blank(),
plot.title = element_text(hjust = .5))
library(ggpubr)
ggarrange(g1, g2, nrow = 1, ncol = 2, widths = c(1, 1.75))
# ----- Semilla aleatoria para reproducibilidad -----
rm(list = ls())
set.seed(31415)
# Número de genes a seleccionar por los métodos de selección de características
numero_de_genes <- 10
# ----- Ruta de trabajo -----
# Windows
#setwd("C:/Users/dredondo/Dropbox/Transporte_interno/Máster/Ciencia de Datos/")
# Mac
#setwd("/Users/daniel/Dropbox/Transporte_interno/Máster/Ciencia de Datos/")
setwd("/Users/daniel/Dropbox/Pública/Archivos - Máster Ciencia de Datos/asignaturas_hechas")
# Carpeta de datos
setwd("TFM/Analisis_higado/data/")
# ----- Carga de paquetes -----
# Instalación de KnowSeq: (es una versión fija de GitHub)
# devtools::install_github("CasedUgr/KnowSeq", ref = "f59cb9e1cb02702697c208cf2c61c45d6e0b7a08", force = TRUE)
# Si hay problemas del tipo "Error: (converted from warning)" : Sys.setenv(R_REMOTES_NO_ERRORS_FROM_WARNINGS="true")library(KnowSeq)     # Para trabajar con datos de transcriptómica de GDC Portal
library(KnowSeq)     # Para trabajar con datos de transcriptómica de GDC Portal
library(dplyr)       # Para select, filter, pipes, ...
library(tictoc)      # Para medir tiempos con tic() y toc() a lo MATLAB
library(beepr)       # Para avisar con beeps cuando acaba un proceso
library(caret)       # Para machine learning
library(e1071)       # Para SVM
library(gplots)      # Para heatmaps
library(reshape2)    # Para melt
library(ggalluvial)  # Para diagrama de Sankey
library(readr)       # Para leer el fichero de datos clínicos
# -----  Sobreescribir la función dataPlot con la nueva función que pinta líneas discontinuas -----
source("../funciones_personalizadas_knowseq/dataPlot.R")
# ----- Preprocesamiento para adecuar ficheros a KnowSeq -----
# Lectura de sample_sheet
samplesInfo <- read.table("gdc_sample_sheet.2020-06-11.tsv", sep = "\t", header = T)
# Se elimina ".counts.gz" de samplesInfo, porque countsToMatrix luego añade la extensión
samplesInfo[,2] <- as.character(samplesInfo[,2])
for(i in 1:nrow(samplesInfo)){
samplesInfo[i,2] <- substr(samplesInfo[i,2], 1, nchar(samplesInfo[i, 2]) - 10)
}
# Comprobación de importación correcta
head(samplesInfo)
# Añadir morfología del tumor: leer datos clínicos
clinical <- read_delim("../data/clinical.cart.2020-06-11/clinical.tsv", "\t", escape_double = FALSE, trim_ws = TRUE) %>%
select(case_submitter_id, primary_diagnosis) %>%
unique
# Anexar morfología
tumores <- samplesInfo %>% filter(Sample.Type == "Primary Tumor")
nrow(tumores) == nrow(clinical) # Comprobación: todos los tumores tienen datos clínicos
tumores <- left_join(x = tumores, y = clinical, by = c("Case.ID" = "case_submitter_id"))
samplesInfo <- samplesInfo %>% filter(Sample.Type != "Primary Tumor") %>%
mutate(primary_diagnosis = "Solid Tissue Normal") %>%
rbind(tumores)
# Recodificación morfologías
table(samplesInfo$primary_diagnosis)
